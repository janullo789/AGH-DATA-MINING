version
install.packages("installr")
library(installr)
?'installr-package'
updateR()
version
version
version
version
devtools::release
devtools::release()
version
r -version
version
install.packages("caret")
install.packages("class")
install.packages("corrplot")
install.packages("forecast")
install.packages("gapminder")
install.packages("lubridate")
install.packages("markdown")
install.packages("MLmetrics")
install.packages("neuralnet")
install.packages("plotly")
install.packages("readr")
install.packages("RTools")
install.packages("tidyverse")
install.packages("plotly")
library(plotly)
# 1 PODSTAWOWE WYKRESY ----
# wykres liniowy
plot_ly(x = c(1, 2, 3), y = c(5, 6, 7),
type = "scatter",
mode = "lines")
# wykres punktowy
plot_ly(x = c(1, 2, 3), y = c(5, 6, 7),
type = "scatter",
mode = "markers")
# wykres słupkowy
plot_ly(x = c(1, 2, 3), y = c(5, 6, 7),
type = "bar",
mode = "markers")
# wykres babelkowy
plot_ly(x = c(1, 2, 3), y = c(5, 6, 7),
type = "scatter",
mode = "markers",
size = c(1,5,10),
marker = list(color=c("red","blue","green")))
plot_ly(z = volcano, type="heatmap")
# wykres liniowy z wypelnieniem
plot_ly(x = c(1, 2, 3), y = c(5, 6, 7),
type = "scatter", mode = "lines", fill = "tozeroy")
x <- rchisq(100, 5, 0)
plot_ly(x=x, type= "histogram")
# boxplot
plot_ly(y = rnorm(50), type = "box") %>%
add_trace(y = rnorm(50, 1))
# histogram 2d
plot_ly(x = rnorm( 1000, sd = 10), y = rnorm( 1000, sd = 5),
type = "histogram2d")
# mapa punktowa (bubble)
plot_ly(type = "scattergeo",
lon = c(-73.5, 151.2),
lat = c(45.5, -33.8),
marker = list(color = c("red" , "blue"),
size = c(30, 50),
mode = "markers"))
plot_ly(type = "choropleth",
locations = c( "AZ", "CA", "VT"),
locationmode = "USA-states",
colorscale = "Viridis", z = c( 10, 20, 40)) %>%
layout(geo = list(scope = "usa"))
plot_ly(type = "scattergeo",
lon = c(42,39),
lat = c(12,22),
text = c("Rome" , "Greece") ,
mode = "markers")
# 4 WYKRESY 3D ----
# wykres powierzchni 3d
plot_ly(type = "surface", z = ~volcano )
# wykres liniowy 3d
plot_ly(type = "scatter3d",
x = c(9, 8, 5, 1),
y = c(1, 2, 4, 8),
z = c(11, 8, 15, 3),
mode = "lines")
# wykresy punktowe 3d
plot_ly(type = "scatter3d",
x = c(9, 8, 5, 1),
y = c( 1, 2, 4, 8),
z = c( 11, 8, 15, 3),
mode = "markers")
# 5 WYGLAD - LAYOUT ----
x = 1:100
y1 =2*x + rnorm (100)
y2 =2*x + rnorm (100)
# Legenda
p <- plot_ly(x =x, y = y1, type ="scatter") %>%
add_trace(x =x,y = y2) %>%
layout(legend = list(x = 0.5,y = 1, bgcolor = "#F3F3F3"))
p
# Osie
axis_template <- list(showgrid = F,
zeroline = F,
nticks = 20,
showline = T,
title = "AXIS",
mirror = "all")
plot_ly(x = x, y = y1, type = "scatter") %>%
layout(xaxis = axis_template, yaxis = axis_template)
#install.packages("htmlwidgets")
htmlwidgets::saveWidget(as_widget(p), "wykres1.html")
# 8 WYKRESY GALERIA
https://plotly.com/r/
g
fig1 <- plot_ly(z = ~volcano, scene='scene1', lighting = list(ambient = 0.2))
fig1 <- fig1 %>%
add_surface(showscale=FALSE)
fig2 <- plot_ly(z = ~volcano, scene='scene2', lighting = list(ambient = 0.9))
fig2 <- fig2 %>%
add_surface(showscale=FALSE)
fig <- subplot(fig1, fig2)
fig <- fig %>%
layout(title = "Ambient Lighting",
grid = list(rows = 1, columns = 2,
pattern = 'independent'),
scene = list(domain=list(column = 0),
aspectmode='cube'),
scene2 = list(domain=list(column = 1),
aspectmode='cube'))
fig
fig
wastewater <- read.table("wastewater.txt", header = TRUE)
setwd("~/Studia/Semestr 6/Data mining/20230320_Cw4")
wastewater <- read.table("wastewater.txt", header = TRUE)
wastewater <- read.table("wastewater.txt", header = TRUE)
wastewater <- read.delim("~/Studia/Semestr 6/Data mining/20230320_Cw4/wastewater.txt")
View(wastewater)
ggplot(data=wastewater, aes(x=x, y=Sandomierz)) +
geom_boxplot(outlier.shape=NA)
library("ggplot2")
ggplot(data=wastewater, aes(x=x, y=Sandomierz)) +
geom_boxplot(outlier.shape=NA)
ggplot(data=wastewater, aes(x=X, y=Sandomierz)) +
geom_boxplot(outlier.shape=NA)
ggplot(data=wastewater +
ggplot(data=wastewater$Sandomierz +
ggplot(data=wastewater$Sandomierz) +
geom_boxplot(outlier.shape=NA)
boxplot(wastewater$Sandomierz)
library(graphics)
hist(wastewater$Sandomierz)
boxplot(wastewater$Sandomierz)
ww = wastewater %>%
mutate(a_Sandomierz = case_when(Sandomierz < 20 & Sandomierz > 0  ~ Sandomierz))
View(ww)
ww = wastewater %>%
mutate(a_Sandomierz = case_when(Sandomierz < 20 & Sandomierz > 0  ~ Sandomierz))
wastewater%>%
mutate(a_Sandomierz=ifelse(Sandomierz>0 & Sandomierz<=20, Sandomierz, NA))
library(dplyr)
wastewater%>%
mutate(a_Sandomierz=ifelse(Sandomierz>0 & Sandomierz<=20, Sandomierz, NA))
View(wastewater)
wastewaterFix = wastewater%>%
mutate(a_Sandomierz=ifelse(Sandomierz>0 & Sandomierz<=20, Sandomierz, NA))
View(wastewaterFix)
boxplot(wastewater$a_Sandomierz)
boxplot(wastewaterFix$a_Sandomierz)
hist(wastewaterFix$a_Sandomierz)
plot(a_Sandomierz$X,a_Sandomierz$a_Sandomierz,type="l")
plot(wastewaterFix$X,wastewaterFix$a_Sandomierz,type="l")
ekstrema_plus = mean(wastewaterFix$a_Sandomierz, na.rm=TRUE) + 3 * sd(wastewaterFix$a_Sandomierz,na.rm=TRUE)
ekstrema_minus = mean(wastewaterFix$a_Sandomierz, na.rm=TRUE) - 3 * sd(wastewaterFix$a_Sandomierz,na.rm=TRUE)
b_Sandomierz = wastewater %>%
mutate(wastewaterFix=ifelse(a_Sandomierz<=ekstrema_plus & a_Sandomierz>ekstrema_minus, a_Sandomierz, NA))
View(wastewaterFix)
b_Sandomierz = wastewater %>%
mutate(a_Sandomierz=ifelse(a_Sandomierz<=ekstrema_plus & a_Sandomierz>ekstrema_minus, a_Sandomierz, NA))
b_Sandomierz = wastewater %>%
mutate(wastewaterFix=ifelse(a_Sandomierz<=ekstrema_plus & a_Sandomierz>ekstrema_minus, a_Sandomierz, NA))
b_Sandomierz = wastewaterFix %>%
mutate(wastewaterFix=ifelse(a_Sandomierz<=ekstrema_plus & a_Sandomierz>ekstrema_minus, a_Sandomierz, NA))
View(wastewaterFix)
b_Sandomierz = wastewaterFix %>%
mutate(a_Sandomierz=ifelse(a_Sandomierz<=ekstrema_plus & a_Sandomierz>ekstrema_minus, a_Sandomierz, NA))
boxplot(wastewaterFix$a_Sandomierz)
boxplot(wastewaterFix$b_Sandomierz)
View(b_Sandomierz)
View(wastewaterFix)
View(b_Sandomierz)
boxplot(b_Sandomierz$a_Sandomierz)
hist(b_Sandomierz$a_Sandomierz)
plot(b_Sandomierz$X,b_Sandomierz$a_Sandomierz,type="l")
plot(b_Sandomierz$a_Sandomierz,type="l")
ts_wwtp<-ts(wastewater$a_Sandomierz,start=c(2002,1),end=c(2007,6),frequency=12)
ts_wwtp<-ts(b_Sandomierz$a_Sandomierz,start=c(2002,1),end=c(2007,6),frequency=12)
acf(ts_wwtp)
ts_wwtp
pacf(ts_wwtp)
library(forcats)
acf(ts_wwtp)
Acf(ts_wwtp)
Acf(ts_wwtp, type="partial")
Acf(ts_wwtp, type="partial")
library(forcats)
Acf(ts_wwtp, type="partial")
library(forcast)
Acf(ts_wwtp, type="partial")
library(zoo)
knitr::opts_chunk$set(echo = TRUE)
cars <- read.table("plik.txt", header = TRUE, sep = ",")
cars <- read.table("cars.txt", header = TRUE, sep = ",")
View(cars)
View(cars)
cars <- read.table("cars.txt", header = TRUE, sep = ",")
View(cars)
View(cars)
cars <- read.table("cars.txt", header = TRUE, sep = ",")
boxplot(cars$mpg)
cars <- read.table("cars.txt", header = TRUE, sep = ",")
boxplot(cars$mpg, cars$cylinders)
cars <- read.table("cars.txt", header = TRUE, sep = ",")
boxplot(cars$mpg)
cars <- read.table("cars.txt", header = TRUE, sep = ",")
boxplot(cars$mpg, xlab="Number of Cylinders")
cars <- read.table("cars.txt", header = TRUE, sep = ",")
boxplot(cars$mpg, xlab="mpg")
boxplot(cars$cylinders, xlab="cylinders")
boxplot(cars$cubicinches, xlab="cubicinches")
knitr::opts_chunk$set(echo = TRUE)
type(cars)
class(cars)
cars <- read.table("cars.txt", header = TRUE, sep = ",")
#boxplot(cars$mpg, xlab="mpg")
#boxplot(cars$cylinders, xlab="cylinders")
#boxplot(cars$cubicinches, xlab="cubicinches")
#boxplot(cars$hp, xlab="hp")
#boxplot(cars$weightlbs, xlab="weightlbs")
#boxplot(cars$time-to-60, xlab="time-to-60")
#boxplot(cars$year, xlab="year")
#boxplot(cars$brand, xlab="brand")
knitr::opts_chunk$set(echo = TRUE)
df$cubicinches <- as.numeric(as.character(cars$cubicinches))
View(df)
df$cubicinches <- as.numeric(as.character(df$cubicinches))
cars$cubicinches <- as.numeric(as.character(df$cubicinches))
df$cubicinches <- as.numeric(cars$cubicinches)
cars$cubicinches <- as.integer(cars$cubicinches)
cars <- read.table("cars.txt", header = TRUE, sep = ",")
# boxplot(cars$mpg, xlab="mpg")
# boxplot(cars$cylinders, xlab="cylinders")
# boxplot(cars$cubicinches, xlab="cubicinches")
# boxplot(cars$hp, xlab="hp")
# boxplot(cars$weightlbs, xlab="weightlbs")
# boxplot(cars$time-to-60, xlab="time-to-60")
# boxplot(cars$year, xlab="year")
# boxplot(cars$brand, xlab="brand")
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars$cubicinches <- as.integer(cars$cubicinches)
# boxplot(cars$mpg, xlab="mpg")
# boxplot(cars$cylinders, xlab="cylinders")
# boxplot(cars$cubicinches, xlab="cubicinches")
# boxplot(cars$hp, xlab="hp")
# boxplot(cars$weightlbs, xlab="weightlbs")
# boxplot(cars$time-to-60, xlab="time-to-60")
# boxplot(cars$year, xlab="year")
# boxplot(cars$brand, xlab="brand")
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
# boxplot(cars$mpg, xlab="mpg")
# boxplot(cars$cylinders, xlab="cylinders")
# boxplot(cars$cubicinches, xlab="cubicinches")
# boxplot(cars$hp, xlab="hp")
# boxplot(cars$weightlbs, xlab="weightlbs")
# boxplot(cars$time-to-60, xlab="time-to-60")
# boxplot(cars$year, xlab="year")
# boxplot(cars$brand, xlab="brand")
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
cars <- read.table("cars.txt", header = TRUE, sep = ",")
# boxplot(cars$mpg, xlab="mpg")
# boxplot(cars$cylinders, xlab="cylinders")
# boxplot(cars$cubicinches, xlab="cubicinches")
# boxplot(cars$hp, xlab="hp")
# boxplot(cars$weightlbs, xlab="weightlbs")
# boxplot(cars$time-to-60, xlab="time-to-60")
# boxplot(cars$year, xlab="year")
# boxplot(cars$brand, xlab="brand")
library(dplyr)
carsFix = cars%>%
mutate(mpg=ifelse(mpg>0, mpg, NA))
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
library(dplyr)
carsFix = cars%>%
mutate(mpg=ifelse(mpg<0, mpg, NA))
View(carsFix)
cars = cars%>%
mutate(mpg=ifelse(mpg<0, mpg, NA))
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars = cars%>%
mutate(mpg=ifelse(mpg<0, mpg, NA))
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars = cars%>%
mutate(mpg=ifelse(mpg>0, mpg, NA))
cars <- read.table("cars.txt", header = TRUE, sep = ",")
# boxplot(cars$mpg, xlab="mpg")
# boxplot(cars$cylinders, xlab="cylinders")
# boxplot(cars$cubicinches, xlab="cubicinches")
# boxplot(cars$hp, xlab="hp")
# boxplot(cars$weightlbs, xlab="weightlbs")
# boxplot(cars$time-to-60, xlab="time-to-60")
# boxplot(cars$year, xlab="year")
# boxplot(cars$brand, xlab="brand")
cars = cars%>%
filter(mpg > 0)
cars = cars%>%
filter(mpg > 0, cylinders > 0)
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
for(col in colnames(cars)[-length(colnames(cars))]) {
filter(col > 0)
}
for(col in colnames(cars)[-length(colnames(cars))]) {
filter(cars, col > 0)
}
for(col in colnames(cars)[-length(colnames(cars))]) {
filter(cars, col > 0)
}
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
filter(cars, col > 0)
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
for(col in colnames(cars)[-length(colnames(cars))]) {
filter(cars, col > 0)
}
filter(cars, col > 0)
}
for(col in colnames(cars)[-length(colnames(cars))]) {
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
(ggplot2)
for(col in colnames(cars)[-length(colnames(cars))]) {
filter(cars, col > 0)
}
for(col in colnames(cars)[-length(colnames(cars))]) {
filter(col > 0)
}
for(col in colnames(cars)[-length(colnames(cars))]) {
filter(col > 0)
}
for(col in colnames(cars)[-length(colnames(cars))]) {
filter(col > 0)
}
for(col in colnames(cars)[-length(colnames(cars))]) {
filter(cars, col > 0)
}
for(col in colnames(cars)[-length(colnames(cars))]) {
cars <- filter(cars, !!sym(col) > 0)
}
for(col in colnames(cars)[-length(colnames(cars))]) {
cars = cars%>%
filter(col > 0)
}
for(col in colnames(cars)[-length(colnames(cars))]) {
cars = cars%>%
filter(col > 0)
}
for(col in colnames(cars)[-length(colnames(cars))]) {
cars = cars%>% filter(col > 0)
}
View(cars)
View(cars)
View(cars)
View(cars)
View(cars)
View(cars)
for(col in colnames(cars)) {
cars = cars%>% filter(col > 0)
}
for(i in 1:7(cars)) {
cars = cars%>% filter(cars[,i] > 0)
}
View(cars)
View(cars)
View(cars)
View(cars)
View(cars)
View(cars)
View(cars)
View(cars)
View(cars)
View(cars)
cars = cars%>%
filter(mpg > 0, cylinders > 0, hp > 0)
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
for(i in 1:7(cars)) {
cars = cars%>% filter(cars[,i] > 0)
}
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
View(cars)
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
for(i in 1:7(cars)) {
cars = cars%>% filter(cars[,i] > 0)
}
for(i in 1:ncol(cars)) {
cars = cars%>% filter(cars[,i] > 0)
}
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
for(i in 1:ncol-1(cars)) {
cars = cars%>% filter(cars[,i] > 0)
}
for(i in 1:(ncol-1)(cars)) {
cars = cars%>% filter(cars[,i] > 0)
}
for(i in 1:ncol(cars)-1) {
cars = cars%>% filter(cars[,i] > 0)
}
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars$cubicinches <- as.integer(as.character(cars$cubicinches))
for(i in 1:ncol(cars)-1) {
cars = cars%>% filter(cars[,i] > 0)
}
for(i in 1:ncol(cars)-2) {
cars = cars%>% filter(cars[,i] > 0)
}
for(i in 1:ncol(cars)-2) {
cars = cars%>% filter(cars[,i] > 0)
}
for(i in 1:ncol(cars)-7) {
cars = cars%>% filter(cars[,i] > 0)
}
for(i in 1:ncol(cars)-8) {
cars = cars%>% filter(cars[,i] > 0)
}
for(i in 1:ncol(cars)-6) {
cars = cars%>% filter(cars[,i] > 0)
}
for(i in 1:ncol(cars)) {
cars[,i] = cars[,i] %>% filter(cars[,i] > 0)
}
filter(cars[,i] > 0)
for(i in 1:ncol(cars)) {
filter(cars[,i] > 0)
}
for(i in 1:ncol(cars)) {
cars = cars%>%
filter(i > 0)
}
for(i in 1:ncol(cars)) {
cars = cars%>%
filter(i > 0)
}
cars <- read.table("cars.txt", header = TRUE, sep = ",")
cars = cars%>%
filter(mpg > 0, cylinders > 0, hp > 0)
